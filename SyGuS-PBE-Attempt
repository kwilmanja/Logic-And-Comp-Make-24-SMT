(set-logic LIA)
(synth-fun f ((a Int) (b Int) (c Int) (d Int)) Int
  ((I Int) (B Bool))
  ((I Int (a b c d
               (+ I I)
               (- I I)
               (* I I)
               (div I I)
               (ite B I I)))
   (B Bool ((and B B)
            (not B)
            (= I I)))))
(declare-var a Int)
(declare-var b Int)
(declare-var c Int)
(declare-var d Int)
(constraint (= (f 3 8 6 1) 24))
(constraint (= (f 5 6 3 1) 24))
(constraint (= (f 2 8 6 9) 24))
(check-synth)
